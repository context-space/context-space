// Code generated by mockery v2.53.4. DO NOT EDIT.

package credentialmanagement_mocks

import (
	context "context"

	domain "github.com/context-space/context-space/backend/internal/credentialmanagement/domain"
	mock "github.com/stretchr/testify/mock"
)

// MockAPIKeyCredentialRepository is an autogenerated mock type for the APIKeyCredentialRepository type
type MockAPIKeyCredentialRepository struct {
	mock.Mock
}

type MockAPIKeyCredentialRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAPIKeyCredentialRepository) EXPECT() *MockAPIKeyCredentialRepository_Expecter {
	return &MockAPIKeyCredentialRepository_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: ctx, credential
func (_m *MockAPIKeyCredentialRepository) Create(ctx context.Context, credential *domain.APIKeyCredential) error {
	ret := _m.Called(ctx, credential)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.APIKeyCredential) error); ok {
		r0 = rf(ctx, credential)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockAPIKeyCredentialRepository_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type MockAPIKeyCredentialRepository_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - ctx context.Context
//   - credential *domain.APIKeyCredential
func (_e *MockAPIKeyCredentialRepository_Expecter) Create(ctx interface{}, credential interface{}) *MockAPIKeyCredentialRepository_Create_Call {
	return &MockAPIKeyCredentialRepository_Create_Call{Call: _e.mock.On("Create", ctx, credential)}
}

func (_c *MockAPIKeyCredentialRepository_Create_Call) Run(run func(ctx context.Context, credential *domain.APIKeyCredential)) *MockAPIKeyCredentialRepository_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*domain.APIKeyCredential))
	})
	return _c
}

func (_c *MockAPIKeyCredentialRepository_Create_Call) Return(_a0 error) *MockAPIKeyCredentialRepository_Create_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockAPIKeyCredentialRepository_Create_Call) RunAndReturn(run func(context.Context, *domain.APIKeyCredential) error) *MockAPIKeyCredentialRepository_Create_Call {
	_c.Call.Return(run)
	return _c
}

// GetByCredentialID provides a mock function with given fields: ctx, credentialID
func (_m *MockAPIKeyCredentialRepository) GetByCredentialID(ctx context.Context, credentialID string) (*domain.APIKeyCredential, error) {
	ret := _m.Called(ctx, credentialID)

	if len(ret) == 0 {
		panic("no return value specified for GetByCredentialID")
	}

	var r0 *domain.APIKeyCredential
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*domain.APIKeyCredential, error)); ok {
		return rf(ctx, credentialID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *domain.APIKeyCredential); ok {
		r0 = rf(ctx, credentialID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.APIKeyCredential)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, credentialID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockAPIKeyCredentialRepository_GetByCredentialID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetByCredentialID'
type MockAPIKeyCredentialRepository_GetByCredentialID_Call struct {
	*mock.Call
}

// GetByCredentialID is a helper method to define mock.On call
//   - ctx context.Context
//   - credentialID string
func (_e *MockAPIKeyCredentialRepository_Expecter) GetByCredentialID(ctx interface{}, credentialID interface{}) *MockAPIKeyCredentialRepository_GetByCredentialID_Call {
	return &MockAPIKeyCredentialRepository_GetByCredentialID_Call{Call: _e.mock.On("GetByCredentialID", ctx, credentialID)}
}

func (_c *MockAPIKeyCredentialRepository_GetByCredentialID_Call) Run(run func(ctx context.Context, credentialID string)) *MockAPIKeyCredentialRepository_GetByCredentialID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockAPIKeyCredentialRepository_GetByCredentialID_Call) Return(_a0 *domain.APIKeyCredential, _a1 error) *MockAPIKeyCredentialRepository_GetByCredentialID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockAPIKeyCredentialRepository_GetByCredentialID_Call) RunAndReturn(run func(context.Context, string) (*domain.APIKeyCredential, error)) *MockAPIKeyCredentialRepository_GetByCredentialID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAPIKeyCredentialRepository creates a new instance of MockAPIKeyCredentialRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAPIKeyCredentialRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAPIKeyCredentialRepository {
	mock := &MockAPIKeyCredentialRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
