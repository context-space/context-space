// Code generated by mockery v2.53.4. DO NOT EDIT.

package shared_mocks

import mock "github.com/stretchr/testify/mock"

// MockEventPublisher is an autogenerated mock type for the EventPublisher type
type MockEventPublisher struct {
	mock.Mock
}

type MockEventPublisher_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEventPublisher) EXPECT() *MockEventPublisher_Expecter {
	return &MockEventPublisher_Expecter{mock: &_m.Mock}
}

// PublishDomainEvent provides a mock function with given fields: event
func (_m *MockEventPublisher) PublishDomainEvent(event interface{}) {
	_m.Called(event)
}

// MockEventPublisher_PublishDomainEvent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PublishDomainEvent'
type MockEventPublisher_PublishDomainEvent_Call struct {
	*mock.Call
}

// PublishDomainEvent is a helper method to define mock.On call
//   - event interface{}
func (_e *MockEventPublisher_Expecter) PublishDomainEvent(event interface{}) *MockEventPublisher_PublishDomainEvent_Call {
	return &MockEventPublisher_PublishDomainEvent_Call{Call: _e.mock.On("PublishDomainEvent", event)}
}

func (_c *MockEventPublisher_PublishDomainEvent_Call) Run(run func(event interface{})) *MockEventPublisher_PublishDomainEvent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(interface{}))
	})
	return _c
}

func (_c *MockEventPublisher_PublishDomainEvent_Call) Return() *MockEventPublisher_PublishDomainEvent_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockEventPublisher_PublishDomainEvent_Call) RunAndReturn(run func(interface{})) *MockEventPublisher_PublishDomainEvent_Call {
	_c.Run(run)
	return _c
}

// NewMockEventPublisher creates a new instance of MockEventPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEventPublisher(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEventPublisher {
	mock := &MockEventPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
